xPres = runif(10,-4.5,4.5)
rect(xPres-0.5,rep(0,10),xPres+0.5,runif(10,0,1),col=sample(c("blue","red"),size=10,replace=T))
# Make the canvas
plot(1:10,1:10,xlim=c(-5,5),ylim=c(0,10),type="n",xlab="",ylab="",xaxt="n",yaxt="n")
# Make the branches
rect(-1,0,1,2,col="tan3",border="tan4",lwd=3)
polygon(c(-5,0,5),c(2,4,2),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-4,0,4),c(3.5,5.5,3.5),col="palegreen4",border="palegreen3",lwd=3)
polygon(c(-3,0,3),c(5,6.5,5),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-2,0,2),c(6.25,7.5,6.25),col="palegreen4",border="palegreen3",lwd=3)
#Add some ornaments
points(x=runif(4,-5,5),y=rep(2,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-4,4),y=rep(3.5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-3,3),y=rep(5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-2,2),y=rep(6.25,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(0,7.5,pch=8,cex=5,col="gold",lwd=3)
# Add some presents
xPres = runif(10,-4.5,4.5)
xWidth = runif(10,0,0.5)
for(i in 1:10){
rect(xPres[i]-xWidth[i],rep(0,10),xPres[i]+xWidth[i],runif(10,0,1),col=sample(c("blue","red"),size=1))
}
# Make the canvas
plot(1:10,1:10,xlim=c(-5,5),ylim=c(0,10),type="n",xlab="",ylab="",xaxt="n",yaxt="n")
# Make the branches
rect(-1,0,1,2,col="tan3",border="tan4",lwd=3)
polygon(c(-5,0,5),c(2,4,2),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-4,0,4),c(3.5,5.5,3.5),col="palegreen4",border="palegreen3",lwd=3)
polygon(c(-3,0,3),c(5,6.5,5),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-2,0,2),c(6.25,7.5,6.25),col="palegreen4",border="palegreen3",lwd=3)
#Add some ornaments
points(x=runif(4,-5,5),y=rep(2,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-4,4),y=rep(3.5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-3,3),y=rep(5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-2,2),y=rep(6.25,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(0,7.5,pch=8,cex=5,col="gold",lwd=3)
# Add some presents
xPres = runif(10,-4.5,4.5)
xWidth = runif(10,0,0.5)
for(i in 1:10){
rect(xPres[i]-xWidth[i],0,xPres[i]+xWidth[i],runif(1,0,1),col=sample(c("blue","red"),size=1))
}
# Make the canvas
plot(1:10,1:10,xlim=c(-5,5),ylim=c(0,10),type="n",xlab="",ylab="",xaxt="n",yaxt="n")
# Make the branches
rect(-1,0,1,2,col="tan3",border="tan4",lwd=3)
polygon(c(-5,0,5),c(2,4,2),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-4,0,4),c(3.5,5.5,3.5),col="palegreen4",border="palegreen3",lwd=3)
polygon(c(-3,0,3),c(5,6.5,5),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-2,0,2),c(6.25,7.5,6.25),col="palegreen4",border="palegreen3",lwd=3)
#Add some ornaments
points(x=runif(4,-5,5),y=rep(2,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-4,4),y=rep(3.5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-3,3),y=rep(5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-2,2),y=rep(6.25,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(0,7.5,pch=8,cex=5,col="gold",lwd=3)
# Add some presents
xPres = runif(10,-4.5,4.5)
xWidth = runif(10,0,0.5)
xHeight=runif(10,0,1)
for(i in 1:10){
rect(xPres[i]-xWidth[i],0,xPres[i]+xWidth[i],xHeight[i],col=sample(c("blue","red"),size=1))
rect(xPres[i]-0.1*xWidth[i],0,xPres[i]+0.1*xWidth[i],xHeight[i],col="gold")
}
# Make the canvas
plot(1:10,1:10,xlim=c(-5,5),ylim=c(0,10),type="n",xlab="",ylab="",xaxt="n",yaxt="n")
# Make the branches
rect(-1,0,1,2,col="tan3",border="tan4",lwd=3)
polygon(c(-5,0,5),c(2,4,2),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-4,0,4),c(3.5,5.5,3.5),col="palegreen4",border="palegreen3",lwd=3)
polygon(c(-3,0,3),c(5,6.5,5),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-2,0,2),c(6.25,7.5,6.25),col="palegreen4",border="palegreen3",lwd=3)
#Add some ornaments
points(x=runif(4,-5,5),y=rep(2,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-4,4),y=rep(3.5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-3,3),y=rep(5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-2,2),y=rep(6.25,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(0,7.5,pch=8,cex=5,col="gold",lwd=3)
# Add some presents
xPres = runif(10,-4.5,4.5)
xWidth = runif(10,0,0.5)
xHeight=runif(10,0,1)
for(i in 1:10){
rect(xPres[i]-xWidth[i],0,xPres[i]+xWidth[i],xHeight[i],col=sample(c("blue","red"),size=1))
rect(xPres[i]-0.2*xWidth[i],0,xPres[i]+0.2*xWidth[i],xHeight[i],col=sample("gold","silver"))
}
# Make the canvas
plot(1:10,1:10,xlim=c(-5,5),ylim=c(0,10),type="n",xlab="",ylab="",xaxt="n",yaxt="n")
# Make the branches
rect(-1,0,1,2,col="tan3",border="tan4",lwd=3)
polygon(c(-5,0,5),c(2,4,2),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-4,0,4),c(3.5,5.5,3.5),col="palegreen4",border="palegreen3",lwd=3)
polygon(c(-3,0,3),c(5,6.5,5),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-2,0,2),c(6.25,7.5,6.25),col="palegreen4",border="palegreen3",lwd=3)
#Add some ornaments
points(x=runif(4,-5,5),y=rep(2,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-4,4),y=rep(3.5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-3,3),y=rep(5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-2,2),y=rep(6.25,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(0,7.5,pch=8,cex=5,col="gold",lwd=3)
# Add some presents
xPres = runif(10,-4.5,4.5)
xWidth = runif(10,0,0.5)
xHeight=runif(10,0,1)
for(i in 1:10){
rect(xPres[i]-xWidth[i],0,xPres[i]+xWidth[i],xHeight[i],col=sample(c("blue","red"),size=1))
rect(xPres[i]-0.2*xWidth[i],0,xPres[i]+0.2*xWidth[i],xHeight[i],col=sample(c("gold","silver"),size=1)
}
# Make the canvas
plot(1:10,1:10,xlim=c(-5,5),ylim=c(0,10),type="n",xlab="",ylab="",xaxt="n",yaxt="n")
# Make the branches
rect(-1,0,1,2,col="tan3",border="tan4",lwd=3)
polygon(c(-5,0,5),c(2,4,2),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-4,0,4),c(3.5,5.5,3.5),col="palegreen4",border="palegreen3",lwd=3)
polygon(c(-3,0,3),c(5,6.5,5),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-2,0,2),c(6.25,7.5,6.25),col="palegreen4",border="palegreen3",lwd=3)
#Add some ornaments
points(x=runif(4,-5,5),y=rep(2,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-4,4),y=rep(3.5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-3,3),y=rep(5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-2,2),y=rep(6.25,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(0,7.5,pch=8,cex=5,col="gold",lwd=3)
# Add some presents
xPres = runif(10,-4.5,4.5)
xWidth = runif(10,0,0.5)
xHeight=runif(10,0,1)
for(i in 1:10){
rect(xPres[i]-xWidth[i],0,xPres[i]+xWidth[i],xHeight[i],col=sample(c("blue","red"),size=1))
rect(xPres[i]-0.2*xWidth[i],0,xPres[i]+0.2*xWidth[i],xHeight[i],col=sample(c("gold","silver"),size=1))
}
# Make the canvas
plot(1:10,1:10,xlim=c(-5,5),ylim=c(0,10),type="n",xlab="",ylab="",xaxt="n",yaxt="n")
# Make the branches
rect(-1,0,1,2,col="tan3",border="tan4",lwd=3)
polygon(c(-5,0,5),c(2,4,2),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-4,0,4),c(3.5,5.5,3.5),col="palegreen4",border="palegreen3",lwd=3)
polygon(c(-3,0,3),c(5,6.5,5),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-2,0,2),c(6.25,7.5,6.25),col="palegreen4",border="palegreen3",lwd=3)
#Add some ornaments
points(x=runif(4,-5,5),y=rep(2,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-4,4),y=rep(3.5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-3,3),y=rep(5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-2,2),y=rep(6.25,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(0,7.5,pch=8,cex=5,col="gold",lwd=3)
# Add some presents
xPres = runif(10,-4.5,4.5)
xWidth = runif(10,0,0.5)
xHeight=runif(10,0,1)
for(i in 1:10){
rect(xPres[i]-xWidth[i],0,xPres[i]+xWidth[i],xHeight[i],col=sample(c("blue","red"),size=1))
rect(xPres[i]-0.2*xWidth[i],0,xPres[i]+0.2*xWidth[i],xHeight[i],col=sample(c("gold","grey87"),size=1))
}
# Make the canvas
plot(1:10,1:10,xlim=c(-5,5),ylim=c(0,10),type="n",xlab="",ylab="",xaxt="n",yaxt="n")
# Make the branches
rect(-1,0,1,2,col="tan3",border="tan4",lwd=3)
polygon(c(-5,0,5),c(2,4,2),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-4,0,4),c(3.5,5.5,3.5),col="palegreen4",border="palegreen3",lwd=3)
polygon(c(-3,0,3),c(5,6.5,5),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-2,0,2),c(6.25,7.5,6.25),col="palegreen4",border="palegreen3",lwd=3)
#Add some ornaments
points(x=runif(4,-5,5),y=rep(2,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-4,4),y=rep(3.5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-3,3),y=rep(5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-2,2),y=rep(6.25,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(0,7.5,pch=8,cex=5,col="gold",lwd=3)
# Add some presents
xPres = runif(10,-4.5,4.5)
xWidth = runif(10,0.1,0.5)
xHeight=runif(10,0,1)
for(i in 1:10){
rect(xPres[i]-xWidth[i],0,xPres[i]+xWidth[i],xHeight[i],col=sample(c("blue","red"),size=1))
rect(xPres[i]-0.2*xWidth[i],0,xPres[i]+0.2*xWidth[i],xHeight[i],col=sample(c("gold","grey87"),size=1))
}
# Make the canvas
plot(1:10,1:10,xlim=c(-5,5),ylim=c(0,10),type="n",xlab="",ylab="",xaxt="n",yaxt="n")
# Make the branches
rect(-1,0,1,2,col="tan3",border="tan4",lwd=3)
polygon(c(-5,0,5),c(2,4,2),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-4,0,4),c(3.5,5.5,3.5),col="palegreen4",border="palegreen3",lwd=3)
polygon(c(-3,0,3),c(5,6.5,5),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-2,0,2),c(6.25,7.5,6.25),col="palegreen4",border="palegreen3",lwd=3)
#Add some ornaments
points(x=runif(4,-5,5),y=rep(2,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-4,4),y=rep(3.5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-3,3),y=rep(5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-2,2),y=rep(6.25,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(0,7.5,pch=8,cex=5,col="gold",lwd=3)
# Add some presents
xPres = runif(10,-4.5,4.5)
xWidth = runif(10,0.1,0.5)
xHeight=runif(10,0,1)
for(i in 1:10){
rect(xPres[i]-xWidth[i],0,xPres[i]+xWidth[i],xHeight[i],col=sample(c("blue","red"),size=1))
rect(xPres[i]-0.2*xWidth[i],0,xPres[i]+0.2*xWidth[i],xHeight[i],col=sample(c("gold","grey87"),size=1))
}
?png
png("xmas.png",height=2*480,width=480)
<script src="https://gist.github.com/4369771.js"></script>
# Make the canvas
plot(1:10,1:10,xlim=c(-5,5),ylim=c(0,10),type="n",xlab="",ylab="",xaxt="n",yaxt="n")
# Make the branches
rect(-1,0,1,2,col="tan3",border="tan4",lwd=3)
polygon(c(-5,0,5),c(2,4,2),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-4,0,4),c(3.5,5.5,3.5),col="palegreen4",border="palegreen3",lwd=3)
polygon(c(-3,0,3),c(5,6.5,5),col="palegreen3",border="palegreen4",lwd=3)
polygon(c(-2,0,2),c(6.25,7.5,6.25),col="palegreen4",border="palegreen3",lwd=3)
#Add some ornaments
points(x=runif(4,-5,5),y=rep(2,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-4,4),y=rep(3.5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-3,3),y=rep(5,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(x=runif(4,-2,2),y=rep(6.25,4),col=sample(c("blue","red"),size=4,replace=T),cex=3,pch=19)
points(0,7.5,pch=8,cex=5,col="gold",lwd=3)
# Add some presents
xPres = runif(10,-4.5,4.5)
xWidth = runif(10,0.1,0.5)
xHeight=runif(10,0,1)
for(i in 1:10){
rect(xPres[i]-xWidth[i],0,xPres[i]+xWidth[i],xHeight[i],col=sample(c("blue","red"),size=1))
rect(xPres[i]-0.2*xWidth[i],0,xPres[i]+0.2*xWidth[i],xHeight[i],col=sample(c("gold","grey87"),size=1))
}
dev.off()
pvals = runif(10000)
pvals05 = pvals[pvals < 0.05]
hist(pvals05)
data()
?network
install.packages("ergm")
library(ergm)
?network
m <- matrix(rbinom(25,1,.4),5,5)
diag(m) <- 0
g <- network(m, directed=FALSE)
summary(g)
m
ss = svd(M)
ss = svd(m)
plot(ss$v[,1])
ss$u[,1] %*% t(ss$v[,1])
ss$d[1]*ss$u[,1] %*% t(ss$v[,1])
library(kernlab)
data(spam)
dim(spam)
set.seed(3435)
trainIndicator = rbinom(4601,size=1,prob=0.5)
table(trainIndicator)
trainSpam = spam[trainIndicator==1,]
testSpam = spam[trainIndicator==0,]
dim(trainSpam)
?dist
hh = hclust(dist(t(trainSpam)))
hh = hclust(dist(t(trainSpam[,1:57])))
plot(hh)
?hclust
plot(hh)
hh = hclust(dist(t(trainSpam[,1:57])),method="average")
plot(hh)
names(trainSpam)
hh = hclust(dist(t(trainSpam[,1:55])),method="average")
plot(hh)
hh = hclust(dist(t(trainSpam[,1:54])),method="average")
plot(hh)
hh = hclust(dist(t(trainSpam[,1:54])))
plot(hh)
?hclust
hh = hclust(dist(t(trainSpam[,1:54])),method="median")
plot(hh)
hh = hclust(dist(t(log(trainSpam[,1:54]+1)),method="median")
)
hh = hclust(dist(t(log(trainSpam[,1:54]+1))),method="median")
plot(hh)
hh = hclust(dist(t(log(trainSpam[,1:54]+1))))
plot(hh)
hh = hclust(dist(t(log(trainSpam[,1:10]+1))))
plot(hh)
hh = hclust(dist(t(log(trainSpam[,1:20]+1))))
plot(hh)
hh = hclust(dist(t(log10(trainSpam[,1:20]+1))))
plot(hh)
hh = hclust(dist(t(trainSpam[,1:20])))
plot(hh)
getwd()
setwd("~/Dropbox/Jeff/teaching/2013/coursera/week1/007structureOfADataAnalysis/")
slidify("index.Rmd")
library(slidify)
slidify("index.Rmd")
browseURl("index.hrml")
browseURl("index.html")
browseURL("index.html")
browseURl("index.html")
slidify("index.Rmd")
?par
slidify("index.Rmd")
slidify("index.Rmd")
browseURl("index.html")
browseURL("index.html")
hCluster = hclust(dist(t(trainSpam[,1:57])))
plot(hCluster)
hClusterUpdated = hclust(dist(t(log10(trainSpam[,1:55]+1))))
plot(hClusterUpdated)
plot(trainSpam$you ~ trainSpam$type)
t.test(trainSpam$you ~ trainSpam$type)
table(trainSpam$type,trainSpam$you > 2)
table(trainSpam$type,trainSpam$you > 2, trainSpam$capitalAve > 20)
t.test(trainSpam$capitalAve ~ trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve) ~ trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve) ~ trainSpam$type)
10^0.5
table(trainSpam$type,trainSpam$you > 2, trainSpam$capitalAve > 3)
slidify("index.Rmd")
browseURl("index.html")
browseURL("index.html")
library(cvTools)
install.packages("cvTools")
library(cvTools)
?cvFit
lm(trainSpam$type ~ trainSpam[,1])
lm(as.numeric(trainSpam$type) ~ trainSpam[,1])
fix(hh)
names(trainSpam)
cvFit(lm(as.numeric(type) ~ trainSpam[,1]))
cvFit(lm(as.numeric(trainSpam$type) ~ trainSpam[,1]))
names(trainSpam)[1]
lm(type ~ names(trainSpam)[1])
lm(type ~ names(trainSpam)[1],data=trainSpam)
formula = paste("train ~",names(trainSpam)[i],sep="")
i  1
i = 1
formula
lmFormula =  paste("train ~",names(trainSpam)[i],sep="")
lmFormulat
lmFormula
i = 1
lmFormula = paste("train~",names(trainSpam)[i],sep="")
cvFit(lm(lmFormula),data=trainSpam)
trainSpam$numType = as.numeric(trainSpam$type)
trainSpam$numType[1]
table(trainSpam$numType,type)
table(trainSpam$numType,trainSpam$type)
lmFormula = as.formula(paste("numType~",names(trainSpam)[i],sep=""))
cvFit(lm(lmFormula),data=trainSpam)
trainSpam$numType
lmFormula
names(trainSpam)
lmFormula = as.formula(paste("type~",names(trainSpam)[i],sep=""))
cvFit(lm(lmFormula),data=trainSpam)
lmFormula
library(boot)
trainSpam$numType = as.numeric(trainSpam$type)-1
trainSpam$numType
trainSpam$numType = as.numeric(trainSpam$type)-1
lmFormula = as.formula(paste("numType~",names(trainSpam)[i],sep=""))
glmFit = glm(lmFormula,family="binomial")
lmFormula = as.formula(paste("numType~",names(trainSpam)[i],sep=""))
glmFit = glm(lmFormula,family="binomial",data=trainSpam)
glmFit
cv.glm(trainSpam,glmFit,)
trainSpam$numType = as.numeric(trainSpam$type)-1
costFunction = function(x,y){sum(x!=y)}
i = 1
lmFormula = as.formula(paste("numType~",names(trainSpam)[i],sep=""))
glmFit = glm(lmFormula,family="binomial",data=trainSpam)
cvError[i] = cv.glm(trainSpam,glmFit,costFunction,10)
cv.glm(trainSpam,glmFit,costFunction,10)
cv.glm(trainSpam,glmFit,costFunction,2)$delta
trainSpam$numType = as.numeric(trainSpam$type)-1
costFunction = function(x,y){sum(x!=y)}
library(boot)
for(i in 1:54){
lmFormula = as.formula(paste("numType~",names(trainSpam)[i],sep=""))
glmFit = glm(lmFormula,family="binomial",data=trainSpam)
cvError[i] = cv.glm(trainSpam,glmFit,costFunction,2)$delta[2]
}
trainSpam$numType = as.numeric(trainSpam$type)-1
costFunction = function(x,y){sum(x!=y)}
cvError = rep(NA,55)
library(boot)
for(i in 1:55){
lmFormula = as.formula(paste("numType~",names(trainSpam)[i],sep=""))
glmFit = glm(lmFormula,family="binomial",data=trainSpam)
cvError[i] = cv.glm(trainSpam,glmFit,costFunction,2)$delta[2]
}
trainSpam$numType = as.numeric(trainSpam$type)-1
costFunction = function(x,y){sum(x!=y)}
cvError = rep(NA,55)
library(boot)
for(i in 1:55){
lmFormula = as.formula(paste("numType~",names(trainSpam)[i],sep=""))
glmFit = glm(lmFormula,family="binomial",data=trainSpam)
cvError[i] = cv.glm(trainSpam,glmFit,costFunction,2)$delta[2]
cat(i)}
plot(cvError)
i = 1
lmFormula = as.formula(paste("numType~",names(trainSpam)[i],sep=""))
glmFit = glm(lmFormula,family="binomial",data=trainSpam)
glmFit
cv.glm(trainSpam,glmFit,costFunction,2)$delta[2]
lmFormula = as.formula(paste("numType~",names(trainSpam)[2],sep=""))
glmFit = glm(lmFormula,family="binomial",data=trainSpam)
glmFit
cv.glm(trainSpam,glmFit,costFunction,2)$delta[2]
cv.glm(trainSpam,glmFit,costFunction,2)
glmFit
trainSpam$numType = as.numeric(trainSpam$type)-1
costFunction = function(x,y){sum((x > 0.5)!=y)}
cvError = rep(NA,55)
i = 1
lmFormula = as.formula(paste("numType~",names(trainSpam)[i],sep=""))
glmFit = glm(lmFormula,family="binomial",data=trainSpam)
cv.glm(trainSpam,glmFit,costFunction,2)$delta[2]
trainSpam$numType = as.numeric(trainSpam$type)-1
costFunction = function(x,y){sum(x!=(y > 0.5))}
cvError = rep(NA,55)
lmFormula = as.formula(paste("numType~",names(trainSpam)[i],sep=""))
glmFit = glm(lmFormula,family="binomial",data=trainSpam)
cv.glm(trainSpam,glmFit,costFunction,2)$delta[2]
trainSpam$numType = as.numeric(trainSpam$type)-1
costFunction = function(x,y){sum(x!=(y > 0.5))}
cvError = rep(NA,55)
library(boot)
for(i in 1:55){
lmFormula = as.formula(paste("numType~",names(trainSpam)[i],sep=""))
glmFit = glm(lmFormula,family="binomial",data=trainSpam)
cvError[i] = cv.glm(trainSpam,glmFit,costFunction,2)$delta[2]
}
plot(cvError)
plot(cvError ~ names(trainSpam[,1:55]))
plot(cvError)
which.min(cvError)
names(trainSpam[53])
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
predictionModel = glm(numType ~ charDollar,family="binomial",data=trainSpam)
predictionModel = glm(numType ~ charDollar,family="binomial",data=trainSpam)
predictionModel = glm(numType ~ charDollar,family="binomial",data=trainSpam)
table(predictonModel$fitted > 0.5,type)
predictionModel = glm(numType ~ charDollar,family="binomial",data=trainSpam)
table(predictionModel$fitted > 0.5,type)
predictionModel = glm(numType ~ charDollar,family="binomial",data=trainSpam)
table(predictionModel$fitted > 0.5,trainSpam$type)
(457 + 54)/(1327 + 449)
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
slidify("index.Rmd")
?predict
predictionTest = predict(predictionModel,testSpam)
predictionTest
?predict
?cv.glm
trainSpam$numType = as.numeric(trainSpam$type)-1
costFunction = function(x,y){sum(x!=(y > 0))}
cvError = rep(NA,55)
library(boot)
for(i in 1:55){
lmFormula = as.formula(paste("numType~",names(trainSpam)[i],sep=""))
glmFit = glm(lmFormula,family="binomial",data=trainSpam)
cvError[i] = cv.glm(trainSpam,glmFit,costFunction,2)$delta[2]
}
which.min(cvError)
names(trainSpam)[which.min(cvError)]
warnings()
cv.glm
?predict.glm
slidify("index.Rmd")
(61+458)/(1346+458 + 61 + 449)
plot(charDollar)
plot(type$charDollar)
plot(trainSpam$charDollar)
which(names(trainSpam)=="charDollar")
table(trainSpam$charDollar)
trainSpam$charDollar[1:100]
trainSpam$charDollar[1:500]
which(trainSpam$charDollar > 0)
trainSpam$charDollar[2]
which(trainSpam$charDollar > 1)
as.numeric(trainSpam$charDollar)
plot(as.numeric(trainSpam$charDollar))
sum(as.numeric(trainSpam$charDollar) > 1)
which(trainSpam$charDollar > 1)
trainSpam$charDollar[108]
predictonModel
predictionModel = glm(numType ~ charDollar,family="binomial",data=trainSpam)
predictionModel
exp(-1 + 15*0)/(1+exp(15*0))
exp(-1 + 15*1)/(1+exp(15*1))
exp(-1 + 15*2)/(1+exp(15*2))
exp(-1 + 15*0.1)/(1+exp(15*0.1))
exp(-1 + 15*0.1)/(1+exp(-1 + 15*0.1))
exp(-1 + 15*0.5)/(1+exp(-1 + 15*0.5))
exp(-1 + 15*0.05)/(1+exp(-1 + 15*0.05))
exp(-1 + 15*0.06)/(1+exp(-1 + 15*0.06))
exp(-1 + 15*0.07)/(1+exp(-1 + 15*0.07))
exp(-1 + 15*0.065)/(1+exp(-1 + 15*0.065))
exp(-1 + 15*0.066)/(1+exp(-1 + 15*0.066))
(61+458)/(1346+458 + 61 + 449)
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
browseURL("index.html")
